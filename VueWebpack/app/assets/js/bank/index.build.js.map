{"version":3,"sources":["webpack:///assets/js/bank/index.build.js","webpack:///./source/bank/shell.bank.index.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./source/config.app.js","webpack:///./~/vue-resource/dist/vue-resource.common.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_app","_index","global","Vue","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","call","isLiteral","exp","literalValueRE","test","isReserved","str","c","charCodeAt","_toString","value","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","this","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","p","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","resource","app","configVueResource","configMap","baseUrl","modules","moduleId","installedModules","loaded","warning","url","http","Promise","$url","$http","$resource","$promise","executor","merge","_typeof","Symbol","array","msg","error","toLower","isFunction","getPrototypeOf","$vm","each","defaults","Url","transform","transforms","serialize","plain","ie","documentMode","root","escape","encodeURIComponent","href","protocol","port","hostname","pathname","UrlTemplate","variables","expand","tmpl","expanded","vars","operators","operator","values","substr","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","part","encodeURI","encodeUriSegment","encodeUriQuery","spaces","slash","urlParams","Http","request","promise","client","Client","interceptors","interceptor","then","response","ok","reject","Error","success","jsonType","Content-Type","headers","xhr","upload","jsonp","beforeSend","crossOrigin","emulateHTTP","emulateJSON","post","patch","common","Accept","custom","X-Requested-With","parseHeaders","row","xhrClient","resolve","status","PromiseObj","all","iterable","race","fulfilled","rejected","callback","always","state","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","TypeError","onResolved","onRejected","XMLHttpRequest","abort","responseText","statusText","getAllResponseHeaders","onload","onabort","onerror","ontimeout","onprogress","header","setRequestHeader","send","when","_request","_response","clearTimeout","jsonpClient","script","random","requestUrl","originUrl","xdrClient","xhrCors","location","xdr","XDomainRequest","Resource","opts"],"mappings":"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","file":"assets/js/bank/index.build.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _app = __webpack_require__(3);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _index = __webpack_require__(1);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, Vue) {/*!\n\t * Vue.js v1.0.24\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.24';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Vue, resource) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar app = {\n\t    configVueResource: function configVueResource() {\n\t        Vue.use(resource);\n\t    },\n\t\n\t    init: function init() {\n\t        this.configVueResource();\n\t    },\n\t    configMap: {\n\t        baseUrl: 'http://localhost:3000/'\n\t    }\n\t};\n\t\n\texports.default = app;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(4)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * vue-resource v0.7.2\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\tmodule.exports =\n\t/******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Install plugin.\n\t\t */\n\t\n\t\tfunction plugin(Vue) {\n\t\n\t\t    if (plugin.installed) {\n\t\t        return;\n\t\t    }\n\t\n\t\t    var _ = __webpack_require__(1);\n\t\n\t\t    _.config = Vue.config;\n\t\t    _.warning = Vue.util.warn;\n\t\t    _.nextTick = Vue.util.nextTick;\n\t\n\t\t    Vue.url = __webpack_require__(2);\n\t\t    Vue.http = __webpack_require__(8);\n\t\t    Vue.resource = __webpack_require__(23);\n\t\t    Vue.Promise = __webpack_require__(10);\n\t\n\t\t    Object.defineProperties(Vue.prototype, {\n\t\n\t\t        $url: {\n\t\t            get: function get() {\n\t\t                return _.options(Vue.url, this, this.$options.url);\n\t\t            }\n\t\t        },\n\t\n\t\t        $http: {\n\t\t            get: function get() {\n\t\t                return _.options(Vue.http, this, this.$options.http);\n\t\t            }\n\t\t        },\n\t\n\t\t        $resource: {\n\t\t            get: function get() {\n\t\t                return Vue.resource.bind(this);\n\t\t            }\n\t\t        },\n\t\n\t\t        $promise: {\n\t\t            get: function get() {\n\t\t                var _this = this;\n\t\n\t\t                return function (executor) {\n\t\t                    return new Vue.Promise(executor, _this);\n\t\t                };\n\t\t            }\n\t\t        }\n\t\n\t\t    });\n\t\t}\n\t\n\t\tif (typeof window !== 'undefined' && window.Vue) {\n\t\t    window.Vue.use(plugin);\n\t\t}\n\t\n\t\tmodule.exports = plugin;\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\t\n\t\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t\t/**\n\t\t * Utility functions.\n\t\t */\n\t\n\t\tvar _ = exports,\n\t\t    array = [],\n\t\t    console = window.console;\n\t\n\t\t_.warn = function (msg) {\n\t\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t\t        console.warn('[VueResource warn]: ' + msg);\n\t\t    }\n\t\t};\n\t\n\t\t_.error = function (msg) {\n\t\t    if (console) {\n\t\t        console.error(msg);\n\t\t    }\n\t\t};\n\t\n\t\t_.trim = function (str) {\n\t\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t\t};\n\t\n\t\t_.toLower = function (str) {\n\t\t    return str ? str.toLowerCase() : '';\n\t\t};\n\t\n\t\t_.isArray = Array.isArray;\n\t\n\t\t_.isString = function (val) {\n\t\t    return typeof val === 'string';\n\t\t};\n\t\n\t\t_.isFunction = function (val) {\n\t\t    return typeof val === 'function';\n\t\t};\n\t\n\t\t_.isObject = function (obj) {\n\t\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t\t};\n\t\n\t\t_.isPlainObject = function (obj) {\n\t\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t\t};\n\t\n\t\t_.options = function (fn, obj, options) {\n\t\n\t\t    options = options || {};\n\t\n\t\t    if (_.isFunction(options)) {\n\t\t        options = options.call(obj);\n\t\t    }\n\t\n\t\t    return _.merge(fn.bind({ $vm: obj, $options: options }), fn, { $options: options });\n\t\t};\n\t\n\t\t_.each = function (obj, iterator) {\n\t\n\t\t    var i, key;\n\t\n\t\t    if (typeof obj.length == 'number') {\n\t\t        for (i = 0; i < obj.length; i++) {\n\t\t            iterator.call(obj[i], obj[i], i);\n\t\t        }\n\t\t    } else if (_.isObject(obj)) {\n\t\t        for (key in obj) {\n\t\t            if (obj.hasOwnProperty(key)) {\n\t\t                iterator.call(obj[key], obj[key], key);\n\t\t            }\n\t\t        }\n\t\t    }\n\t\n\t\t    return obj;\n\t\t};\n\t\n\t\t_.defaults = function (target, source) {\n\t\n\t\t    for (var key in source) {\n\t\t        if (target[key] === undefined) {\n\t\t            target[key] = source[key];\n\t\t        }\n\t\t    }\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\t_.extend = function (target) {\n\t\n\t\t    var args = array.slice.call(arguments, 1);\n\t\n\t\t    args.forEach(function (arg) {\n\t\t        merge(target, arg);\n\t\t    });\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\t_.merge = function (target) {\n\t\n\t\t    var args = array.slice.call(arguments, 1);\n\t\n\t\t    args.forEach(function (arg) {\n\t\t        merge(target, arg, true);\n\t\t    });\n\t\n\t\t    return target;\n\t\t};\n\t\n\t\tfunction merge(target, source, deep) {\n\t\t    for (var key in source) {\n\t\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t\t                target[key] = {};\n\t\t            }\n\t\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t\t                target[key] = [];\n\t\t            }\n\t\t            merge(target[key], source[key], deep);\n\t\t        } else if (source[key] !== undefined) {\n\t\t            target[key] = source[key];\n\t\t        }\n\t\t    }\n\t\t}\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for URL templating.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar ie = document.documentMode;\n\t\tvar el = document.createElement('a');\n\t\n\t\tfunction Url(url, params) {\n\t\n\t\t    var options = url,\n\t\t        transform;\n\t\n\t\t    if (_.isString(url)) {\n\t\t        options = { url: url, params: params };\n\t\t    }\n\t\n\t\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t\t    Url.transforms.forEach(function (handler) {\n\t\t        transform = factory(handler, transform, this.$vm);\n\t\t    }, this);\n\t\n\t\t    return transform(options);\n\t\t};\n\t\n\t\t/**\n\t\t * Url options.\n\t\t */\n\t\n\t\tUrl.options = {\n\t\t    url: '',\n\t\t    root: null,\n\t\t    params: {}\n\t\t};\n\t\n\t\t/**\n\t\t * Url transforms.\n\t\t */\n\t\n\t\tUrl.transforms = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(6), __webpack_require__(7)];\n\t\n\t\t/**\n\t\t * Encodes a Url parameter string.\n\t\t *\n\t\t * @param {Object} obj\n\t\t */\n\t\n\t\tUrl.params = function (obj) {\n\t\n\t\t    var params = [],\n\t\t        escape = encodeURIComponent;\n\t\n\t\t    params.add = function (key, value) {\n\t\n\t\t        if (_.isFunction(value)) {\n\t\t            value = value();\n\t\t        }\n\t\n\t\t        if (value === null) {\n\t\t            value = '';\n\t\t        }\n\t\n\t\t        this.push(escape(key) + '=' + escape(value));\n\t\t    };\n\t\n\t\t    serialize(params, obj);\n\t\n\t\t    return params.join('&').replace(/%20/g, '+');\n\t\t};\n\t\n\t\t/**\n\t\t * Parse a URL and return its components.\n\t\t *\n\t\t * @param {String} url\n\t\t */\n\t\n\t\tUrl.parse = function (url) {\n\t\n\t\t    if (ie) {\n\t\t        el.href = url;\n\t\t        url = el.href;\n\t\t    }\n\t\n\t\t    el.href = url;\n\t\n\t\t    return {\n\t\t        href: el.href,\n\t\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t\t        port: el.port,\n\t\t        host: el.host,\n\t\t        hostname: el.hostname,\n\t\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t\t    };\n\t\t};\n\t\n\t\tfunction factory(handler, next, vm) {\n\t\t    return function (options) {\n\t\t        return handler.call(vm, options, next);\n\t\t    };\n\t\t}\n\t\n\t\tfunction serialize(params, obj, scope) {\n\t\n\t\t    var array = _.isArray(obj),\n\t\t        plain = _.isPlainObject(obj),\n\t\t        hash;\n\t\n\t\t    _.each(obj, function (value, key) {\n\t\n\t\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t\t        if (scope) {\n\t\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t\t        }\n\t\n\t\t        if (!scope && array) {\n\t\t            params.add(value.name, value.value);\n\t\t        } else if (hash) {\n\t\t            serialize(params, value, key);\n\t\t        } else {\n\t\t            params.add(key, value);\n\t\t        }\n\t\t    });\n\t\t}\n\t\n\t\tmodule.exports = _.url = Url;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * URL Template (RFC 6570) Transform.\n\t\t */\n\t\n\t\tvar UrlTemplate = __webpack_require__(4);\n\t\n\t\tmodule.exports = function (options) {\n\t\n\t\t    var variables = [],\n\t\t        url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t\t    variables.forEach(function (key) {\n\t\t        delete options.params[key];\n\t\t    });\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t\t */\n\t\n\t\texports.expand = function (url, params, variables) {\n\t\n\t\t    var tmpl = this.parse(url),\n\t\t        expanded = tmpl.expand(params);\n\t\n\t\t    if (variables) {\n\t\t        variables.push.apply(variables, tmpl.vars);\n\t\t    }\n\t\n\t\t    return expanded;\n\t\t};\n\t\n\t\texports.parse = function (template) {\n\t\n\t\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t\t        variables = [];\n\t\n\t\t    return {\n\t\t        vars: variables,\n\t\t        expand: function expand(context) {\n\t\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t\t                if (expression) {\n\t\n\t\t                    var operator = null,\n\t\t                        values = [];\n\t\n\t\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t\t                        operator = expression.charAt(0);\n\t\t                        expression = expression.substr(1);\n\t\t                    }\n\t\n\t\t                    expression.split(/,/g).forEach(function (variable) {\n\t\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t\t                        variables.push(tmp[1]);\n\t\t                    });\n\t\n\t\t                    if (operator && operator !== '+') {\n\t\n\t\t                        var separator = ',';\n\t\n\t\t                        if (operator === '?') {\n\t\t                            separator = '&';\n\t\t                        } else if (operator !== '#') {\n\t\t                            separator = operator;\n\t\t                        }\n\t\n\t\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t\t                    } else {\n\t\t                        return values.join(',');\n\t\t                    }\n\t\t                } else {\n\t\t                    return exports.encodeReserved(literal);\n\t\t                }\n\t\t            });\n\t\t        }\n\t\t    };\n\t\t};\n\t\n\t\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t\t    var value = context[key],\n\t\t        result = [];\n\t\n\t\t    if (this.isDefined(value) && value !== '') {\n\t\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t\t            value = value.toString();\n\t\n\t\t            if (modifier && modifier !== '*') {\n\t\t                value = value.substring(0, parseInt(modifier, 10));\n\t\t            }\n\t\n\t\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t\t        } else {\n\t\t            if (modifier === '*') {\n\t\t                if (Array.isArray(value)) {\n\t\t                    value.filter(this.isDefined).forEach(function (value) {\n\t\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t\t                    }, this);\n\t\t                } else {\n\t\t                    Object.keys(value).forEach(function (k) {\n\t\t                        if (this.isDefined(value[k])) {\n\t\t                            result.push(this.encodeValue(operator, value[k], k));\n\t\t                        }\n\t\t                    }, this);\n\t\t                }\n\t\t            } else {\n\t\t                var tmp = [];\n\t\n\t\t                if (Array.isArray(value)) {\n\t\t                    value.filter(this.isDefined).forEach(function (value) {\n\t\t                        tmp.push(this.encodeValue(operator, value));\n\t\t                    }, this);\n\t\t                } else {\n\t\t                    Object.keys(value).forEach(function (k) {\n\t\t                        if (this.isDefined(value[k])) {\n\t\t                            tmp.push(encodeURIComponent(k));\n\t\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t\t                        }\n\t\t                    }, this);\n\t\t                }\n\t\n\t\t                if (this.isKeyOperator(operator)) {\n\t\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t\t                } else if (tmp.length !== 0) {\n\t\t                    result.push(tmp.join(','));\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    } else {\n\t\t        if (operator === ';') {\n\t\t            result.push(encodeURIComponent(key));\n\t\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t\t            result.push(encodeURIComponent(key) + '=');\n\t\t        } else if (value === '') {\n\t\t            result.push('');\n\t\t        }\n\t\t    }\n\t\n\t\t    return result;\n\t\t};\n\t\n\t\texports.isDefined = function (value) {\n\t\t    return value !== undefined && value !== null;\n\t\t};\n\t\n\t\texports.isKeyOperator = function (operator) {\n\t\t    return operator === ';' || operator === '&' || operator === '?';\n\t\t};\n\t\n\t\texports.encodeValue = function (operator, value, key) {\n\t\n\t\t    value = operator === '+' || operator === '#' ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t\t    if (key) {\n\t\t        return encodeURIComponent(key) + '=' + value;\n\t\t    } else {\n\t\t        return value;\n\t\t    }\n\t\t};\n\t\n\t\texports.encodeReserved = function (str) {\n\t\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t\t            part = encodeURI(part);\n\t\t        }\n\t\t        return part;\n\t\t    }).join('');\n\t\t};\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Legacy Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var variables = [],\n\t\t        url = next(options);\n\t\n\t\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t\t        if (options.params[name]) {\n\t\t            variables.push(name);\n\t\t            return slash + encodeUriSegment(options.params[name]);\n\t\t        }\n\t\n\t\t        return '';\n\t\t    });\n\t\n\t\t    variables.forEach(function (key) {\n\t\t        delete options.params[key];\n\t\t    });\n\t\n\t\t    return url;\n\t\t};\n\t\n\t\tfunction encodeUriSegment(value) {\n\t\n\t\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t\t}\n\t\n\t\tfunction encodeUriQuery(value, spaces) {\n\t\n\t\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t\t}\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Query Parameter Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var urlParams = Object.keys(_.url.options.params),\n\t\t        query = {},\n\t\t        url = next(options);\n\t\n\t\t    _.each(options.params, function (value, key) {\n\t\t        if (urlParams.indexOf(key) === -1) {\n\t\t            query[key] = value;\n\t\t        }\n\t\t    });\n\t\n\t\t    query = _.url.params(query);\n\t\n\t\t    if (query) {\n\t\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t\t    }\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Root Prefix Transform.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = function (options, next) {\n\t\n\t\t    var url = next(options);\n\t\n\t\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t\t        url = options.root + '/' + url;\n\t\t    }\n\t\n\t\t    return url;\n\t\t};\n\t\n\t/***/ },\n\t/* 8 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for sending network requests.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Client = __webpack_require__(9);\n\t\tvar Promise = __webpack_require__(10);\n\t\tvar interceptor = __webpack_require__(13);\n\t\tvar jsonType = { 'Content-Type': 'application/json' };\n\t\n\t\tfunction Http(url, options) {\n\t\t    var _this = this;\n\t\n\t\t    var client = Client,\n\t\t        request,\n\t\t        promise;\n\t\n\t\t    Http.interceptors.forEach(function (handler) {\n\t\t        client = interceptor(handler, _this.$vm)(client);\n\t\t    });\n\t\n\t\t    options = _.isObject(url) ? url : _.extend({ url: url }, options);\n\t\t    request = _.merge({}, Http.options, this.$options, options);\n\t\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t\t        return response.ok ? response : Promise.reject(response);\n\t\t    }, function (response) {\n\t\n\t\t        if (response instanceof Error) {\n\t\t            _.error(response);\n\t\t        }\n\t\n\t\t        return Promise.reject(response);\n\t\t    });\n\t\n\t\t    if (request.success) {\n\t\t        promise.success(request.success);\n\t\t    }\n\t\n\t\t    if (request.error) {\n\t\t        promise.error(request.error);\n\t\t    }\n\t\n\t\t    return promise;\n\t\t}\n\t\n\t\tHttp.options = {\n\t\t    method: 'get',\n\t\t    data: '',\n\t\t    params: {},\n\t\t    headers: {},\n\t\t    xhr: null,\n\t\t    upload: null,\n\t\t    jsonp: 'callback',\n\t\t    beforeSend: null,\n\t\t    crossOrigin: null,\n\t\t    emulateHTTP: false,\n\t\t    emulateJSON: false,\n\t\t    timeout: 0\n\t\t};\n\t\n\t\tHttp.interceptors = [__webpack_require__(14), __webpack_require__(15), __webpack_require__(16), __webpack_require__(18), __webpack_require__(19), __webpack_require__(20), __webpack_require__(21)];\n\t\n\t\tHttp.headers = {\n\t\t    put: jsonType,\n\t\t    post: jsonType,\n\t\t    patch: jsonType,\n\t\t    delete: jsonType,\n\t\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t\t};\n\t\n\t\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t\t    Http[method] = function (url, data, success, options) {\n\t\n\t\t        if (_.isFunction(data)) {\n\t\t            options = success;\n\t\t            success = data;\n\t\t            data = undefined;\n\t\t        }\n\t\n\t\t        if (_.isObject(success)) {\n\t\t            options = success;\n\t\t            success = undefined;\n\t\t        }\n\t\n\t\t        return this(url, _.extend({ method: method, data: data, success: success }, options));\n\t\t    };\n\t\t});\n\t\n\t\tmodule.exports = _.http = Http;\n\t\n\t/***/ },\n\t/* 9 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Base client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\tvar xhrClient = __webpack_require__(12);\n\t\n\t\tmodule.exports = function (request) {\n\t\n\t\t    var response = (request.client || xhrClient)(request);\n\t\n\t\t    return Promise.resolve(response).then(function (response) {\n\t\n\t\t        if (response.headers) {\n\t\n\t\t            var headers = parseHeaders(response.headers);\n\t\n\t\t            response.headers = function (name) {\n\t\n\t\t                if (name) {\n\t\t                    return headers[_.toLower(name)];\n\t\t                }\n\t\n\t\t                return headers;\n\t\t            };\n\t\t        }\n\t\n\t\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t\t        return response;\n\t\t    });\n\t\t};\n\t\n\t\tfunction parseHeaders(str) {\n\t\n\t\t    var headers = {},\n\t\t        value,\n\t\t        name,\n\t\t        i;\n\t\n\t\t    if (_.isString(str)) {\n\t\t        _.each(str.split('\\n'), function (row) {\n\t\n\t\t            i = row.indexOf(':');\n\t\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t\t            value = _.trim(row.slice(i + 1));\n\t\n\t\t            if (headers[name]) {\n\t\n\t\t                if (_.isArray(headers[name])) {\n\t\t                    headers[name].push(value);\n\t\t                } else {\n\t\t                    headers[name] = [headers[name], value];\n\t\t                }\n\t\t            } else {\n\t\n\t\t                headers[name] = value;\n\t\t            }\n\t\t        });\n\t\t    }\n\t\n\t\t    return headers;\n\t\t}\n\t\n\t/***/ },\n\t/* 10 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Promise adapter.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar PromiseObj = window.Promise || __webpack_require__(11);\n\t\n\t\tfunction Promise(executor, context) {\n\t\n\t\t    if (executor instanceof PromiseObj) {\n\t\t        this.promise = executor;\n\t\t    } else {\n\t\t        this.promise = new PromiseObj(executor.bind(context));\n\t\t    }\n\t\n\t\t    this.context = context;\n\t\t}\n\t\n\t\tPromise.all = function (iterable, context) {\n\t\t    return new Promise(PromiseObj.all(iterable), context);\n\t\t};\n\t\n\t\tPromise.resolve = function (value, context) {\n\t\t    return new Promise(PromiseObj.resolve(value), context);\n\t\t};\n\t\n\t\tPromise.reject = function (reason, context) {\n\t\t    return new Promise(PromiseObj.reject(reason), context);\n\t\t};\n\t\n\t\tPromise.race = function (iterable, context) {\n\t\t    return new Promise(PromiseObj.race(iterable), context);\n\t\t};\n\t\n\t\tvar p = Promise.prototype;\n\t\n\t\tp.bind = function (context) {\n\t\t    this.context = context;\n\t\t    return this;\n\t\t};\n\t\n\t\tp.then = function (fulfilled, rejected) {\n\t\n\t\t    if (fulfilled && fulfilled.bind && this.context) {\n\t\t        fulfilled = fulfilled.bind(this.context);\n\t\t    }\n\t\n\t\t    if (rejected && rejected.bind && this.context) {\n\t\t        rejected = rejected.bind(this.context);\n\t\t    }\n\t\n\t\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t\t    return this;\n\t\t};\n\t\n\t\tp.catch = function (rejected) {\n\t\n\t\t    if (rejected && rejected.bind && this.context) {\n\t\t        rejected = rejected.bind(this.context);\n\t\t    }\n\t\n\t\t    this.promise = this.promise.catch(rejected);\n\t\n\t\t    return this;\n\t\t};\n\t\n\t\tp.finally = function (callback) {\n\t\n\t\t    return this.then(function (value) {\n\t\t        callback.call(this);\n\t\t        return value;\n\t\t    }, function (reason) {\n\t\t        callback.call(this);\n\t\t        return PromiseObj.reject(reason);\n\t\t    });\n\t\t};\n\t\n\t\tp.success = function (callback) {\n\t\n\t\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t\t    return this.then(function (response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    });\n\t\t};\n\t\n\t\tp.error = function (callback) {\n\t\n\t\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t\t    return this.catch(function (response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    });\n\t\t};\n\t\n\t\tp.always = function (callback) {\n\t\n\t\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t\t    var cb = function cb(response) {\n\t\t        return callback.call(this, response.data, response.status, response) || response;\n\t\t    };\n\t\n\t\t    return this.then(cb, cb);\n\t\t};\n\t\n\t\tmodule.exports = Promise;\n\t\n\t/***/ },\n\t/* 11 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t\t/**\n\t\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tvar RESOLVED = 0;\n\t\tvar REJECTED = 1;\n\t\tvar PENDING = 2;\n\t\n\t\tfunction Promise(executor) {\n\t\n\t\t    this.state = PENDING;\n\t\t    this.value = undefined;\n\t\t    this.deferred = [];\n\t\n\t\t    var promise = this;\n\t\n\t\t    try {\n\t\t        executor(function (x) {\n\t\t            promise.resolve(x);\n\t\t        }, function (r) {\n\t\t            promise.reject(r);\n\t\t        });\n\t\t    } catch (e) {\n\t\t        promise.reject(e);\n\t\t    }\n\t\t}\n\t\n\t\tPromise.reject = function (r) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        reject(r);\n\t\t    });\n\t\t};\n\t\n\t\tPromise.resolve = function (x) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        resolve(x);\n\t\t    });\n\t\t};\n\t\n\t\tPromise.all = function all(iterable) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        var count = 0,\n\t\t            result = [];\n\t\n\t\t        if (iterable.length === 0) {\n\t\t            resolve(result);\n\t\t        }\n\t\n\t\t        function resolver(i) {\n\t\t            return function (x) {\n\t\t                result[i] = x;\n\t\t                count += 1;\n\t\n\t\t                if (count === iterable.length) {\n\t\t                    resolve(result);\n\t\t                }\n\t\t            };\n\t\t        }\n\t\n\t\t        for (var i = 0; i < iterable.length; i += 1) {\n\t\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tPromise.race = function race(iterable) {\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        for (var i = 0; i < iterable.length; i += 1) {\n\t\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tvar p = Promise.prototype;\n\t\n\t\tp.resolve = function resolve(x) {\n\t\t    var promise = this;\n\t\n\t\t    if (promise.state === PENDING) {\n\t\t        if (x === promise) {\n\t\t            throw new TypeError('Promise settled with itself.');\n\t\t        }\n\t\n\t\t        var called = false;\n\t\n\t\t        try {\n\t\t            var then = x && x['then'];\n\t\n\t\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t\t                then.call(x, function (x) {\n\t\t                    if (!called) {\n\t\t                        promise.resolve(x);\n\t\t                    }\n\t\t                    called = true;\n\t\t                }, function (r) {\n\t\t                    if (!called) {\n\t\t                        promise.reject(r);\n\t\t                    }\n\t\t                    called = true;\n\t\t                });\n\t\t                return;\n\t\t            }\n\t\t        } catch (e) {\n\t\t            if (!called) {\n\t\t                promise.reject(e);\n\t\t            }\n\t\t            return;\n\t\t        }\n\t\n\t\t        promise.state = RESOLVED;\n\t\t        promise.value = x;\n\t\t        promise.notify();\n\t\t    }\n\t\t};\n\t\n\t\tp.reject = function reject(reason) {\n\t\t    var promise = this;\n\t\n\t\t    if (promise.state === PENDING) {\n\t\t        if (reason === promise) {\n\t\t            throw new TypeError('Promise settled with itself.');\n\t\t        }\n\t\n\t\t        promise.state = REJECTED;\n\t\t        promise.value = reason;\n\t\t        promise.notify();\n\t\t    }\n\t\t};\n\t\n\t\tp.notify = function notify() {\n\t\t    var promise = this;\n\t\n\t\t    _.nextTick(function () {\n\t\t        if (promise.state !== PENDING) {\n\t\t            while (promise.deferred.length) {\n\t\t                var deferred = promise.deferred.shift(),\n\t\t                    onResolved = deferred[0],\n\t\t                    onRejected = deferred[1],\n\t\t                    resolve = deferred[2],\n\t\t                    reject = deferred[3];\n\t\n\t\t                try {\n\t\t                    if (promise.state === RESOLVED) {\n\t\t                        if (typeof onResolved === 'function') {\n\t\t                            resolve(onResolved.call(undefined, promise.value));\n\t\t                        } else {\n\t\t                            resolve(promise.value);\n\t\t                        }\n\t\t                    } else if (promise.state === REJECTED) {\n\t\t                        if (typeof onRejected === 'function') {\n\t\t                            resolve(onRejected.call(undefined, promise.value));\n\t\t                        } else {\n\t\t                            reject(promise.value);\n\t\t                        }\n\t\t                    }\n\t\t                } catch (e) {\n\t\t                    reject(e);\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    });\n\t\t};\n\t\n\t\tp.then = function then(onResolved, onRejected) {\n\t\t    var promise = this;\n\t\n\t\t    return new Promise(function (resolve, reject) {\n\t\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t\t        promise.notify();\n\t\t    });\n\t\t};\n\t\n\t\tp.catch = function (onRejected) {\n\t\t    return this.then(undefined, onRejected);\n\t\t};\n\t\n\t\tmodule.exports = Promise;\n\t\n\t/***/ },\n\t/* 12 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * XMLHttp client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var xhr = new XMLHttpRequest(),\n\t\t            response = { request: request },\n\t\t            handler;\n\t\n\t\t        request.cancel = function () {\n\t\t            xhr.abort();\n\t\t        };\n\t\n\t\t        xhr.open(request.method, _.url(request), true);\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            response.data = xhr.responseText;\n\t\t            response.status = xhr.status;\n\t\t            response.statusText = xhr.statusText;\n\t\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t\t            resolve(response);\n\t\t        };\n\t\n\t\t        xhr.timeout = 0;\n\t\t        xhr.onload = handler;\n\t\t        xhr.onabort = handler;\n\t\t        xhr.onerror = handler;\n\t\t        xhr.ontimeout = function () {};\n\t\t        xhr.onprogress = function () {};\n\t\n\t\t        if (_.isPlainObject(request.xhr)) {\n\t\t            _.extend(xhr, request.xhr);\n\t\t        }\n\t\n\t\t        if (_.isPlainObject(request.upload)) {\n\t\t            _.extend(xhr.upload, request.upload);\n\t\t        }\n\t\n\t\t        _.each(request.headers || {}, function (value, header) {\n\t\t            xhr.setRequestHeader(header, value);\n\t\t        });\n\t\n\t\t        xhr.send(request.data);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 13 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Interceptor factory.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (handler, vm) {\n\t\n\t\t    return function (client) {\n\t\n\t\t        if (_.isFunction(handler)) {\n\t\t            handler = handler.call(vm, Promise);\n\t\t        }\n\t\n\t\t        return function (request) {\n\t\n\t\t            if (_.isFunction(handler.request)) {\n\t\t                request = handler.request.call(vm, request);\n\t\t            }\n\t\n\t\t            return when(request, function (request) {\n\t\t                return when(client(request), function (response) {\n\t\n\t\t                    if (_.isFunction(handler.response)) {\n\t\t                        response = handler.response.call(vm, response);\n\t\t                    }\n\t\n\t\t                    return response;\n\t\t                });\n\t\t            });\n\t\t        };\n\t\t    };\n\t\t};\n\t\n\t\tfunction when(value, fulfilled, rejected) {\n\t\n\t\t    var promise = Promise.resolve(value);\n\t\n\t\t    if (arguments.length < 2) {\n\t\t        return promise;\n\t\t    }\n\t\n\t\t    return promise.then(fulfilled, rejected);\n\t\t}\n\t\n\t/***/ },\n\t/* 14 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Before Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_.isFunction(_request.beforeSend)) {\n\t\t            _request.beforeSend.call(this, _request);\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 15 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * Timeout Interceptor.\n\t\t */\n\t\n\t\tmodule.exports = function () {\n\t\n\t\t    var timeout;\n\t\n\t\t    return {\n\t\n\t\t        request: function request(_request) {\n\t\n\t\t            if (_request.timeout) {\n\t\t                timeout = setTimeout(function () {\n\t\t                    _request.cancel();\n\t\t                }, _request.timeout);\n\t\t            }\n\t\n\t\t            return _request;\n\t\t        },\n\t\n\t\t        response: function response(_response) {\n\t\n\t\t            clearTimeout(timeout);\n\t\n\t\t            return _response;\n\t\t        }\n\t\n\t\t    };\n\t\t};\n\t\n\t/***/ },\n\t/* 16 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * JSONP Interceptor.\n\t\t */\n\t\n\t\tvar jsonpClient = __webpack_require__(17);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.method == 'JSONP') {\n\t\t            _request.client = jsonpClient;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 17 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * JSONP client.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t\t            response = { request: request, data: null },\n\t\t            handler,\n\t\t            script;\n\t\n\t\t        request.params[request.jsonp] = callback;\n\t\t        request.cancel = function () {\n\t\t            handler({ type: 'cancel' });\n\t\t        };\n\t\n\t\t        script = document.createElement('script');\n\t\t        script.src = _.url(request);\n\t\t        script.type = 'text/javascript';\n\t\t        script.async = true;\n\t\n\t\t        window[callback] = function (data) {\n\t\t            response.data = data;\n\t\t        };\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            if (event.type === 'load' && response.data !== null) {\n\t\t                response.status = 200;\n\t\t            } else if (event.type === 'error') {\n\t\t                response.status = 404;\n\t\t            } else {\n\t\t                response.status = 0;\n\t\t            }\n\t\n\t\t            resolve(response);\n\t\n\t\t            delete window[callback];\n\t\t            document.body.removeChild(script);\n\t\t        };\n\t\n\t\t        script.onload = handler;\n\t\t        script.onerror = handler;\n\t\n\t\t        document.body.appendChild(script);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 18 */\n\t/***/ function(module, exports) {\n\t\n\t\t/**\n\t\t * HTTP method override Interceptor.\n\t\t */\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t\t            _request.method = 'POST';\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 19 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Mime Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.emulateJSON && _.isPlainObject(_request.data)) {\n\t\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t\t            _request.data = _.url.params(_request.data);\n\t\t        }\n\t\n\t\t        if (_.isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t\t            delete _request.headers['Content-Type'];\n\t\t        }\n\t\n\t\t        if (_.isPlainObject(_request.data)) {\n\t\t            _request.data = JSON.stringify(_request.data);\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    },\n\t\n\t\t    response: function response(_response) {\n\t\n\t\t        try {\n\t\t            _response.data = JSON.parse(_response.data);\n\t\t        } catch (e) {}\n\t\n\t\t        return _response;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 20 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Header Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        _request.method = _request.method.toUpperCase();\n\t\t        _request.headers = _.extend({}, _.http.headers.common, !_request.crossOrigin ? _.http.headers.custom : {}, _.http.headers[_request.method.toLowerCase()], _request.headers);\n\t\n\t\t        if (_.isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t\t            _.extend(_request.params, _request.data);\n\t\t            delete _request.data;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t/***/ },\n\t/* 21 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * CORS Interceptor.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar xdrClient = __webpack_require__(22);\n\t\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\t\tvar originUrl = _.url.parse(location.href);\n\t\n\t\tmodule.exports = {\n\t\n\t\t    request: function request(_request) {\n\t\n\t\t        if (_request.crossOrigin === null) {\n\t\t            _request.crossOrigin = crossOrigin(_request);\n\t\t        }\n\t\n\t\t        if (_request.crossOrigin) {\n\t\n\t\t            if (!xhrCors) {\n\t\t                _request.client = xdrClient;\n\t\t            }\n\t\n\t\t            _request.emulateHTTP = false;\n\t\t        }\n\t\n\t\t        return _request;\n\t\t    }\n\t\n\t\t};\n\t\n\t\tfunction crossOrigin(request) {\n\t\n\t\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t\t}\n\t\n\t/***/ },\n\t/* 22 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * XDomain client (Internet Explorer).\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\tvar Promise = __webpack_require__(10);\n\t\n\t\tmodule.exports = function (request) {\n\t\t    return new Promise(function (resolve) {\n\t\n\t\t        var xdr = new XDomainRequest(),\n\t\t            response = { request: request },\n\t\t            handler;\n\t\n\t\t        request.cancel = function () {\n\t\t            xdr.abort();\n\t\t        };\n\t\n\t\t        xdr.open(request.method, _.url(request), true);\n\t\n\t\t        handler = function handler(event) {\n\t\n\t\t            response.data = xdr.responseText;\n\t\t            response.status = xdr.status;\n\t\t            response.statusText = xdr.statusText;\n\t\n\t\t            resolve(response);\n\t\t        };\n\t\n\t\t        xdr.timeout = 0;\n\t\t        xdr.onload = handler;\n\t\t        xdr.onabort = handler;\n\t\t        xdr.onerror = handler;\n\t\t        xdr.ontimeout = function () {};\n\t\t        xdr.onprogress = function () {};\n\t\n\t\t        xdr.send(request.data);\n\t\t    });\n\t\t};\n\t\n\t/***/ },\n\t/* 23 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t/**\n\t\t * Service for interacting with RESTful services.\n\t\t */\n\t\n\t\tvar _ = __webpack_require__(1);\n\t\n\t\tfunction Resource(url, params, actions, options) {\n\t\n\t\t    var self = this,\n\t\t        resource = {};\n\t\n\t\t    actions = _.extend({}, Resource.actions, actions);\n\t\n\t\t    _.each(actions, function (action, name) {\n\t\n\t\t        action = _.merge({ url: url, params: params || {} }, options, action);\n\t\n\t\t        resource[name] = function () {\n\t\t            return (self.$http || _.http)(opts(action, arguments));\n\t\t        };\n\t\t    });\n\t\n\t\t    return resource;\n\t\t}\n\t\n\t\tfunction opts(action, args) {\n\t\n\t\t    var options = _.extend({}, action),\n\t\t        params = {},\n\t\t        data,\n\t\t        success,\n\t\t        error;\n\t\n\t\t    switch (args.length) {\n\t\n\t\t        case 4:\n\t\n\t\t            error = args[3];\n\t\t            success = args[2];\n\t\n\t\t        case 3:\n\t\t        case 2:\n\t\n\t\t            if (_.isFunction(args[1])) {\n\t\n\t\t                if (_.isFunction(args[0])) {\n\t\n\t\t                    success = args[0];\n\t\t                    error = args[1];\n\t\n\t\t                    break;\n\t\t                }\n\t\n\t\t                success = args[1];\n\t\t                error = args[2];\n\t\t            } else {\n\t\n\t\t                params = args[0];\n\t\t                data = args[1];\n\t\t                success = args[2];\n\t\n\t\t                break;\n\t\t            }\n\t\n\t\t        case 1:\n\t\n\t\t            if (_.isFunction(args[0])) {\n\t\t                success = args[0];\n\t\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t\t                data = args[0];\n\t\t            } else {\n\t\t                params = args[0];\n\t\t            }\n\t\n\t\t            break;\n\t\n\t\t        case 0:\n\t\n\t\t            break;\n\t\n\t\t        default:\n\t\n\t\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t\t    }\n\t\n\t\t    options.data = data;\n\t\t    options.params = _.extend({}, options.params, params);\n\t\n\t\t    if (success) {\n\t\t        options.success = success;\n\t\t    }\n\t\n\t\t    if (error) {\n\t\t        options.error = error;\n\t\t    }\n\t\n\t\t    return options;\n\t\t}\n\t\n\t\tResource.actions = {\n\t\n\t\t    get: { method: 'GET' },\n\t\t    save: { method: 'POST' },\n\t\t    query: { method: 'GET' },\n\t\t    update: { method: 'PUT' },\n\t\t    remove: { method: 'DELETE' },\n\t\t    delete: { method: 'DELETE' }\n\t\n\t\t};\n\t\n\t\tmodule.exports = _.resource = Resource;\n\t\n\t/***/ }\n\t/******/ ]);\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** assets/js/bank/index.build.js\n **/","import app from 'app'\r\nimport css from './index/index.css'\n\n\n/** WEBPACK FOOTER **\n ** ./source/bank/shell.bank.index.js\n **/","/*!\n * Vue.js v1.0.24\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.24';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 2\n ** module chunks = 1\n **/","/*\r\n * 应用定义\r\n */\r\n\r\n// 应用初始化和参数注册\r\nlet app = {\r\n    // 注册Resource组件\r\n    configVueResource: function() {\r\n        Vue.use(resource)\r\n    },\r\n    // 初始化\r\n    init: function() {\r\n        this.configVueResource()\r\n    },\r\n    configMap: {\r\n        baseUrl: 'http://localhost:3000/'\r\n    }\r\n}\r\n\r\n// 输出\r\nexport default app\n\n\n/** WEBPACK FOOTER **\n ** ./source/config.app.js\n **/","/**\n * vue-resource v0.7.2\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\nmodule.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\n\tfunction plugin(Vue) {\n\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\n\t    var _ = __webpack_require__(1);\n\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\n\t    Vue.url = __webpack_require__(2);\n\t    Vue.http = __webpack_require__(8);\n\t    Vue.resource = __webpack_require__(23);\n\t    Vue.Promise = __webpack_require__(10);\n\n\t    Object.defineProperties(Vue.prototype, {\n\n\t        $url: {\n\t            get: function get() {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\n\t        $http: {\n\t            get: function get() {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\n\t        $promise: {\n\t            get: function get() {\n\t                var _this = this;\n\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\n\t    });\n\t}\n\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\n\tmodule.exports = plugin;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\t/**\n\t * Utility functions.\n\t */\n\n\tvar _ = exports,\n\t    array = [],\n\t    console = window.console;\n\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\n\t_.isArray = Array.isArray;\n\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\n\t_.isObject = function (obj) {\n\t    return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t};\n\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\n\t_.options = function (fn, obj, options) {\n\n\t    options = options || {};\n\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\n\t    return _.merge(fn.bind({ $vm: obj, $options: options }), fn, { $options: options });\n\t};\n\n\t_.each = function (obj, iterator) {\n\n\t    var i, key;\n\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\n\t    return obj;\n\t};\n\n\t_.defaults = function (target, source) {\n\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\n\t    return target;\n\t};\n\n\t_.extend = function (target) {\n\n\t    var args = array.slice.call(arguments, 1);\n\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\n\t    return target;\n\t};\n\n\t_.merge = function (target) {\n\n\t    var args = array.slice.call(arguments, 1);\n\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\n\t    return target;\n\t};\n\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\n\tfunction Url(url, params) {\n\n\t    var options = url,\n\t        transform;\n\n\t    if (_.isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\n\t    options = _.merge({}, Url.options, this.$options, options);\n\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\n\t    return transform(options);\n\t};\n\n\t/**\n\t * Url options.\n\t */\n\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\n\t/**\n\t * Url transforms.\n\t */\n\n\tUrl.transforms = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(6), __webpack_require__(7)];\n\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\n\tUrl.params = function (obj) {\n\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\n\t    params.add = function (key, value) {\n\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\n\t    serialize(params, obj);\n\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\n\tUrl.parse = function (url) {\n\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\n\t    el.href = url;\n\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\n\tfunction serialize(params, obj, scope) {\n\n\t    var array = _.isArray(obj),\n\t        plain = _.isPlainObject(obj),\n\t        hash;\n\n\t    _.each(obj, function (value, key) {\n\n\t        hash = _.isObject(value) || _.isArray(value);\n\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\n\tmodule.exports = _.url = Url;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\n\tvar UrlTemplate = __webpack_require__(4);\n\n\tmodule.exports = function (options) {\n\n\t    var variables = [],\n\t        url = UrlTemplate.expand(options.url, options.params, variables);\n\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\n\t    return url;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\n\texports.expand = function (url, params, variables) {\n\n\t    var tmpl = this.parse(url),\n\t        expanded = tmpl.expand(params);\n\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\n\t    return expanded;\n\t};\n\n\texports.parse = function (template) {\n\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\n\t                    var operator = null,\n\t                        values = [];\n\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\n\t                    if (operator && operator !== '+') {\n\n\t                        var separator = ',';\n\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\n\texports.getValues = function (context, operator, key, modifier) {\n\n\t    var value = context[key],\n\t        result = [];\n\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\n\t    return result;\n\t};\n\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\n\texports.encodeValue = function (operator, value, key) {\n\n\t    value = operator === '+' || operator === '#' ? this.encodeReserved(value) : encodeURIComponent(value);\n\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var variables = [],\n\t        url = next(options);\n\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\n\t        return '';\n\t    });\n\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\n\t    return url;\n\t};\n\n\tfunction encodeUriSegment(value) {\n\n\t    return encodeUriQuery(value, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');\n\t}\n\n\tfunction encodeUriQuery(value, spaces) {\n\n\t    return encodeURIComponent(value).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, spaces ? '%20' : '+');\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var urlParams = Object.keys(_.url.options.params),\n\t        query = {},\n\t        url = next(options);\n\n\t    _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\n\t    query = _.url.params(query);\n\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\n\t    return url;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = function (options, next) {\n\n\t    var url = next(options);\n\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\n\t    return url;\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Client = __webpack_require__(9);\n\tvar Promise = __webpack_require__(10);\n\tvar interceptor = __webpack_require__(13);\n\tvar jsonType = { 'Content-Type': 'application/json' };\n\n\tfunction Http(url, options) {\n\t    var _this = this;\n\n\t    var client = Client,\n\t        request,\n\t        promise;\n\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, _this.$vm)(client);\n\t    });\n\n\t    options = _.isObject(url) ? url : _.extend({ url: url }, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\n\t        return response.ok ? response : Promise.reject(response);\n\t    }, function (response) {\n\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\n\t        return Promise.reject(response);\n\t    });\n\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\n\t    return promise;\n\t}\n\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\n\tHttp.interceptors = [__webpack_require__(14), __webpack_require__(15), __webpack_require__(16), __webpack_require__(18), __webpack_require__(19), __webpack_require__(20), __webpack_require__(21)];\n\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: { 'Accept': 'application/json, text/plain, */*' },\n\t    custom: { 'X-Requested-With': 'XMLHttpRequest' }\n\t};\n\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n\t    Http[method] = function (url, data, success, options) {\n\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\n\t        return this(url, _.extend({ method: method, data: data, success: success }, options));\n\t    };\n\t});\n\n\tmodule.exports = _.http = Http;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\tvar xhrClient = __webpack_require__(12);\n\n\tmodule.exports = function (request) {\n\n\t    var response = (request.client || xhrClient)(request);\n\n\t    return Promise.resolve(response).then(function (response) {\n\n\t        if (response.headers) {\n\n\t            var headers = parseHeaders(response.headers);\n\n\t            response.headers = function (name) {\n\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\n\t                return headers;\n\t            };\n\t        }\n\n\t        response.ok = response.status >= 200 && response.status < 300;\n\n\t        return response;\n\t    });\n\t};\n\n\tfunction parseHeaders(str) {\n\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\n\t            if (headers[name]) {\n\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t            } else {\n\n\t                headers[name] = value;\n\t            }\n\t        });\n\t    }\n\n\t    return headers;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar PromiseObj = window.Promise || __webpack_require__(11);\n\n\tfunction Promise(executor, context) {\n\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\n\t    this.context = context;\n\t}\n\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\n\tvar p = Promise.prototype;\n\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\n\tp.then = function (fulfilled, rejected) {\n\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\n\t    return this;\n\t};\n\n\tp.catch = function (rejected) {\n\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\n\t    this.promise = this.promise.catch(rejected);\n\n\t    return this;\n\t};\n\n\tp.finally = function (callback) {\n\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\n\tp.success = function (callback) {\n\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\n\tp.error = function (callback) {\n\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\n\tp.always = function (callback) {\n\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n\t    var cb = function cb(response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\n\t    return this.then(cb, cb);\n\t};\n\n\tmodule.exports = Promise;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\n\tfunction Promise(executor) {\n\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\n\t    var promise = this;\n\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\n\tvar p = Promise.prototype;\n\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\n\t        var called = false;\n\n\t        try {\n\t            var then = x && x['then'];\n\n\t            if (x !== null && (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\n\tp.notify = function notify() {\n\t    var promise = this;\n\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\n\tmodule.exports = Promise;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var xhr = new XMLHttpRequest(),\n\t            response = { request: request },\n\t            handler;\n\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\n\t        xhr.open(request.method, _.url(request), true);\n\n\t        handler = function handler(event) {\n\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\n\t            resolve(response);\n\t        };\n\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (handler, vm) {\n\n\t    return function (client) {\n\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\n\t        return function (request) {\n\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\n\tfunction when(value, fulfilled, rejected) {\n\n\t    var promise = Promise.resolve(value);\n\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_.isFunction(_request.beforeSend)) {\n\t            _request.beforeSend.call(this, _request);\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\n\tmodule.exports = function () {\n\n\t    var timeout;\n\n\t    return {\n\n\t        request: function request(_request) {\n\n\t            if (_request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    _request.cancel();\n\t                }, _request.timeout);\n\t            }\n\n\t            return _request;\n\t        },\n\n\t        response: function response(_response) {\n\n\t            clearTimeout(timeout);\n\n\t            return _response;\n\t        }\n\n\t    };\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\n\tvar jsonpClient = __webpack_require__(17);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.method == 'JSONP') {\n\t            _request.client = jsonpClient;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            response = { request: request, data: null },\n\t            handler,\n\t            script;\n\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({ type: 'cancel' });\n\t        };\n\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\n\t        handler = function handler(event) {\n\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\n\t            resolve(response);\n\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(_request.method)) {\n\t            _request.headers['X-HTTP-Method-Override'] = _request.method;\n\t            _request.method = 'POST';\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.emulateJSON && _.isPlainObject(_request.data)) {\n\t            _request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            _request.data = _.url.params(_request.data);\n\t        }\n\n\t        if (_.isObject(_request.data) && /FormData/i.test(_request.data.toString())) {\n\t            delete _request.headers['Content-Type'];\n\t        }\n\n\t        if (_.isPlainObject(_request.data)) {\n\t            _request.data = JSON.stringify(_request.data);\n\t        }\n\n\t        return _request;\n\t    },\n\n\t    response: function response(_response) {\n\n\t        try {\n\t            _response.data = JSON.parse(_response.data);\n\t        } catch (e) {}\n\n\t        return _response;\n\t    }\n\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        _request.method = _request.method.toUpperCase();\n\t        _request.headers = _.extend({}, _.http.headers.common, !_request.crossOrigin ? _.http.headers.custom : {}, _.http.headers[_request.method.toLowerCase()], _request.headers);\n\n\t        if (_.isPlainObject(_request.data) && /^(GET|JSONP)$/i.test(_request.method)) {\n\t            _.extend(_request.params, _request.data);\n\t            delete _request.data;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar xdrClient = __webpack_require__(22);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\n\tmodule.exports = {\n\n\t    request: function request(_request) {\n\n\t        if (_request.crossOrigin === null) {\n\t            _request.crossOrigin = crossOrigin(_request);\n\t        }\n\n\t        if (_request.crossOrigin) {\n\n\t            if (!xhrCors) {\n\t                _request.client = xdrClient;\n\t            }\n\n\t            _request.emulateHTTP = false;\n\t        }\n\n\t        return _request;\n\t    }\n\n\t};\n\n\tfunction crossOrigin(request) {\n\n\t    var requestUrl = _.url.parse(_.url(request));\n\n\t    return requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host;\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(10);\n\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\n\t        var xdr = new XDomainRequest(),\n\t            response = { request: request },\n\t            handler;\n\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\n\t        xdr.open(request.method, _.url(request), true);\n\n\t        handler = function handler(event) {\n\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\n\t            resolve(response);\n\t        };\n\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\n\tvar _ = __webpack_require__(1);\n\n\tfunction Resource(url, params, actions, options) {\n\n\t    var self = this,\n\t        resource = {};\n\n\t    actions = _.extend({}, Resource.actions, actions);\n\n\t    _.each(actions, function (action, name) {\n\n\t        action = _.merge({ url: url, params: params || {} }, options, action);\n\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\n\t    return resource;\n\t}\n\n\tfunction opts(action, args) {\n\n\t    var options = _.extend({}, action),\n\t        params = {},\n\t        data,\n\t        success,\n\t        error;\n\n\t    switch (args.length) {\n\n\t        case 4:\n\n\t            error = args[3];\n\t            success = args[2];\n\n\t        case 3:\n\t        case 2:\n\n\t            if (_.isFunction(args[1])) {\n\n\t                if (_.isFunction(args[0])) {\n\n\t                    success = args[0];\n\t                    error = args[1];\n\n\t                    break;\n\t                }\n\n\t                success = args[1];\n\t                error = args[2];\n\t            } else {\n\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\n\t                break;\n\t            }\n\n\t        case 1:\n\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\n\t            break;\n\n\t        case 0:\n\n\t            break;\n\n\t        default:\n\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\n\t    return options;\n\t}\n\n\tResource.actions = {\n\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\n\t};\n\n\tmodule.exports = _.resource = Resource;\n\n/***/ }\n/******/ ]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 4\n ** module chunks = 1\n **/"],"sourceRoot":""}